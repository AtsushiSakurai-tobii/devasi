user<-readline("Enter : ")
user<-readline("Enter : ")
user<-readline("Enter : ")
user<-readline("Enter user name(ex: Atsusi, Hajime) : ")
if (user=="Atsushi"){
setwd("C:/R/dev/apps/danboard/")
}else{
setwd("C:/R/dev/apps/danboard/")  }
}
if (user=="Atsushi"){
setwd("C:/R/dev/apps/danboard/")
}else{
setwd("C:/R/dev/apps/danboard/")
}
user<-readline("Enter user name(ex: Atsushi, Hajime) : ")
setwd("C:/R/dev/apps/danboard/")
}else{
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
user<-readline("Enter user name(ex: Atsushi, Hajime) : ")
if (user=="Atsushi"){
setwd("C:/R/dev/apps/danboard/")
}else{
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
user<-readline("Enter user name(ex: Atsushi, Hajime) : ")
if (user=="Atsushi"){
setwd("C:/R/dev/apps/danboard/")
}else{
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
?if
user<-readline("Enter user name(ex: Atsushi, Hajime) : ")
setwd("C:/R/dev/apps/danboard/")
}else if (user=="Hajime"){
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
user<-readline("Enter user name(ex: Atsushi, Hajime) : ")
if (user=="Atsushi"){
setwd("C:/R/dev/apps/danboard/")
}else if (user=="Hajime"){
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
##ユーザ選択
##Atushiの場合ならびにHajimeの場合でそれぞれ対応するカレントディレクトリをセット
user<-readline("Enter user name(ex: Atsushi, Hajime) : ")
setwd("C:/R/dev/apps/danboard/")
}else if (user=="Hajime"){
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
source("user.r")
##ユーザ選択
##Atushiの場合ならびにHajimeの場合でそれぞれ対応するカレントディレクトリをセット
user<-readline("Enter user name(ex: Atsushi, Hajime) : ")
setwd("C:/R/dev/apps/danboard/")
}else if (user=="Hajime"){
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
source("user.r")
getwd()
source("user.r")
user<-readline("Enter user name(ex: Atsushi, Hajime) : ")
if (user=="Atsushi"){
setwd("C:/R/dev/apps/danboard/")
}else if (user=="Hajime"){
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
getwd()
setwd("C:/R/dev/apps/danboard/")
if (user=="Atsushi"){
setwd("C:/R/dev/apps/danboard/")
}else if (user=="Hajime"){
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
user
user<-readline("Enter user name(ex: Atsushi, Hajime) : ")
if (user=="Atsushi"){
setwd("C:/R/dev/apps/danboard/")
}else if (user=="Hajime"){
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
user<-readline("Enter user name(ex: Atsushi, Hajime) : ")
setwd("C:/R/dev/apps/danboard/")
}else if (user=="Hajime"){
setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
}
?menu
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), 3, 12)
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), setwd("C:/R/dev/apps/danboard/"), 12)
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), setwd("C:/R/dev/apps/danboard/"), setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
)
)
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), setwd("C:/R/dev/apps/danboard/"), setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi")
)
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), setwd("C:/R/dev/apps/danboard/"), setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi"))
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), setwd("C:/R/dev/apps/danboard/"), setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi"))
source("func_my.r")
directory
setwd(paste(getwd(),"/danboard/")
)
setwd(paste(getwd(),"/danboard/"))
getwd()
setwd(paste(getwd(),"/danboard/"),sep="")
setwd(paste(getwd(),"/danboard/",sep=""))
getwd()
source("func_my.r")
source("func_save.r")
source("func_spsstable.r")
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), setwd("C:/R/dev/apps/danboard/"), setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/"))
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), setwd("C:/R/dev/apps/danboard/"), setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/"))
source("func_my.r")
source("func_my.r")
myfunc <- function () {
Str <- readline("Enter : ")
#as.numeric(unlist(strsplit(Str, ",")))
#プロジェクトディレクトリの作成
dir.create(paste("../datacheck/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("../danboard/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
return(Str)
}
dir.create(paste("../datacheck/", Str, "/", sep=""), showWarnings = TRUE)
Str <- readline("Enter : ")
dir.create(paste("../datacheck/", Str, "/", sep=""), showWarnings = TRUE)
getwd()
paste("../datacheck/", Str, "/", sep="")
paste("./datacheck/", Str, "/", sep="")
dir.create(paste("./datacheck/", Str, "/", sep=""), showWarnings = TRUE)
?dir.create
path
source("func_my.r")
source("func_my.r")
myfunc
myfunc <- function () {
Str <- readline("Enter : ")
#as.numeric(unlist(strsplit(Str, ",")))
#プロジェクトディレクトリの作成
setwd("../")
dir.create(paste("C:/R/dev/apps/datacheck/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("C:/R/dev/apps/danboard/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
return(Str)
}
getwd()
source("func_my.r")
source("func_save.r")
getwd()
?dir.create
dir.create(paste("../danboard/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("./danboard/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
paste("./danboard/usr/out/", Str, "/", sep="")
dir.create(paste("/danboard/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("danboard/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("danboard/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("./usr/out/", Str, "/", sep=""), showWarnings = TRUE)
getwd()
dir.create(paste("/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("./usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("../usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/usr/out/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/usr", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/usr/", Str, "/", sep=""), showWarnings = TRUE)
dir.create(paste("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/usr/", Str, "/", sep=""), showWarnings = TRUE)
"/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/usr/ccjc"
getwd()
dir.create(paste("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/usr", Str, "/", sep=""), showWarnings = TRUE)
?dir.create
dir.create(paste("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/usr/", Str, "/", sep=""), showWarnings = TRUE,recursive=TRUE)
dir.create(paste("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/usr/out", Str, "/", sep=""), showWarnings = TRUE,recursive=TRUE)
dir.create(paste("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/usr/out/", Str, "/", sep=""), showWarnings = TRUE,recursive=TRUE)
getwd()
dir.create(paste("./usr/out/", Str, "/", sep=""), showWarnings = TRUE,recursive=TRUE)
dir.create(paste("../datacheck/", Str, "/", sep=""), showWarnings = TRUE, recursive = TRUE)
getwd()
dir.create(paste("../datacheck/", Str, "/", sep=""), showWarnings = TRUE, recursive = TRUE)
dir.create(paste("./usr/out/", Str, "/", sep=""), showWarnings = TRUE, recursive = TRUE)
getwd()
dir.create(paste("../datacheck/", projectname, "/", sep=""), showWarnings = TRUE,recursive= TRUE)
projectname<-ccjc
projectname<-"ccjc"
dir.create(paste("../datacheck/", projectname, "/", sep=""), showWarnings = TRUE,recursive= TRUE)
getwd()
projc   <- paste(getwd(),"/datacheck/", projectname, "/", saveday, "_Export_", projectname, "_AOIData_Checked.csv" , sep="")
saveday <- format(Sys.Date(), format="%y-%m-%d")
projc   <- paste(getwd(),"/datacheck/", projectname, "/", saveday, "_Export_", projectname, "_AOIData_Checked.csv" , sep="")
projc
?write.csv
dir.create(paste("../datacheck/", projectname, "/", sep=""), showWarnings = TRUE,recursive= TRUE)
projc   <- paste(saveday, "_Export_", projectname, "_AOIData_Checked.csv" , sep="")
projc
save.dir<-dir.create(paste("../datacheck/", projectname, "/", sep=""), showWarnings = TRUE,recursive= TRUE)
save.dir
?dir.create
setwd(../)
setwd("../")
getwd()
projectname
paste("../datacheck/",projectname,"/")
paste("../datacheck/",projectname,"/",sep="")
setwd(paste("../datacheck/",projectname,"/",sep=""))
getwd()
getwd(./danbord)
getwd(./danboard)
getwd("./danboard")
getwd()
setwd("./danboard")
getwd()
setwd(paste("../datacheck/",projectname,"/",sep=""))
getwd()
dir.create(paste("./usr/out/", projectname, "/", sep=""), showWarnings = TRUE,recursive = TRUE)
setwd("../dtacheck")
setwd("../datacheck")
getwd()
setwd(../)#ディレクトリをdanbordに戻す
setwd(../)#ディレクトリをdanbordに戻す
getwd()
setwd(..)
setwd(../)
setwd("../")
setwd("../")
getwd()
setwd("./danboard")
getwd()
setwd("../datacheck")
export_attlist   <- paste(projectname, "/", saveday, "_Generate_", projectname, FILENAME , sep="")
setwd("../")#ディレクトリdanboardに戻す
getwd()
setwd("../datacheck")
setwd("./danboard")
setwd("../datacheck")
getwd()
print("save")
setwd("../")#ディレクトリdanboardに戻す
getwd()
setwd("./datacheck")
getwd()
setwd("../danboard")
setwd("../datacheck")
getwd()
setwd("../danboard")#ディレクトリdanboardに戻す
getwd()
source("func_my.r")
source("func_save.r")
getwd()
source("dataread.r")
projectsheet <- paste("/usr/lib/", projectname,"_Master_r.xlsx",sep="")
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
projectname
projectsheet <- paste("C:/R/dev/apps/danboard/usr/lib/", projectname,"_Master_r.xlsx",sep="")
projectsheet
setwd("./usr/lib")
getwd()
library(AlgDesign)
library(survival)
ffd<-gen.factorial(c(2,2,2,2,2,4),varNames=c("Crealance Sonor","Aero","Cruise Control","Sun Roof","Traction Control System","Price"),factors="all")
ffd
set.seed(123)
des16<-optFederov(~.,ffd,16)
cs1<-des16$design
cs2<-cs1
cs3<-cs1
cs4<-cs3
cs1<-transform(cs1,r1=runif(16))
cs2<-transform(cs2,r2=runif(16))
cs3<-transform(cs3,r3=runif(16))
cs4<-transform(cs4,r4=runif(16))
cs1_sort<-cs1[order(cs1$r1),]
cs2_sort<-cs2[order(cs2$r2),]
cs3_sort<-cs3[order(cs3$r3),]
cs4_sort<-cs4[order(cs4$r4),]
cs1_sort
View(cs1_sort)
View(cs2_sort)
View(cs3_sort)
View(cs4_sort)
setwd("./usr/lib")
getwd()
dir.create(paste("./usr/lib/", sep=""), showWarnings = TRUE, recursive = TRUE) #libディレクトリもここで作成
projectsheet <- paste(projectname,"_Master_r.xlsx",sep="")
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
ES116vol1
source("func_my.r")
source("func_save.r")
source("func_spsstable.r")
#データの読み込み
source("dataread.r")
projectname <- myfunc()
source("dataread.r")
projectsheet <- paste(projectname,"_Master_r.xlsx",sep="")
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
getwd()
setwd("./usr/lib")
projectsheet <- paste(projectname,"_Master_r.xlsx",sep="")
#読み込み
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
source("dataread.r")
source("dataread.r")
att       <- read.xlsx( projectsheet, 2,  encoding="UTF-8", header=TRUE, row.names=TRUE)
queslist  <- read.xlsx( projectsheet, 3,  encoding="UTF-8", header=TRUE, row.names=TRUE)
ques      <- read.xlsx( projectsheet, 4,  encoding="UTF-8", header=TRUE, row.names=TRUE)
hearlist  <- read.xlsx( projectsheet, 5,  encoding="UTF-8", header=TRUE, row.names=TRUE)
hear      <- read.xlsx( projectsheet, 6,  encoding="UTF-8", header=TRUE, row.names=TRUE)
intevlist <- read.xlsx( projectsheet, 7,  encoding="UTF-8", header=FALSE)
intev     <- read.xlsx( projectsheet, 8,  encoding="UTF-8", header=TRUE, row.names=TRUE)
aoilist   <- read.xlsx( projectsheet, 9,  encoding="UTF-8", header=TRUE, row.names=TRUE)
dur       <- read.xlsx( projectsheet, 10, encoding="UTF-8", stringsAsFactors=FALSE, header=TRUE, row.names=TRUE)
cou       <- read.xlsx( projectsheet, 11, encoding="UTF-8", stringsAsFactors=FALSE, header=TRUE, row.names=TRUE)
ttf       <- read.xlsx( projectsheet, 12, encoding="UTF-8", stringsAsFactors=FALSE, header=TRUE, row.names=TRUE)
getwd()
setwd("../");setwd("../")#ディレクトリをdanboardに戻す
getwd()
source("check_diff.r")
source("dataread.r")
source("read_data.r")
source("check_diff.r")
attlist
aoilist
hearlist
att       <- read.xlsx( projectsheet, 2,  encoding="UTF-8", header=TRUE, row.names=TRUE)
queslist  <- read.xlsx( projectsheet, 3,  encoding="UTF-8", header=TRUE, row.names=TRUE)
getwd()
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
att
attlist
prcomp
prcomp(att)
prcomp(att[,1:5])
?xlsx
require(xlsx)
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
att       <- read.xlsx( projectsheet, 2,  encoding="UTF-8", header=TRUE, row.names=TRUE)
getwd()
setwd("../")
setwd("../")
setwd("../")
getwd()
setwd("./Desktop/")
getwd()
runApp("newdir)
runApp("newdir")
runApp("newdir")
library(shiny)
install.packages("shiny")
library(shiny)
runApp("newdir")
runApp("Desktop")
getwd()
runApp("Desktop")
setwd("./")
getwd()
setwd("../")
setwd("./Document")
setwd("./Document/")
getwd()
setwd("./Documents/")
getwd()
setwd("./shinytest/")
getwd()
runApp("shinytest")
setwd("../")
runApp("shinytest")
input
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), setwd("C:/R/dev/apps/danboard/"), setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/"))
source("func_my.r")
source("func_save.r")
source("func_spsstable.r")
#データの読み込み
source("read_data.r")
source("check_diff.r")
source("check_aoidata_metrics.r")
source("func_save.r")
source("func_spsstable.r")
#データの読み込み
source("func_my.r")
getwd()
source("func_save.r")
source("func_my.r")
getwd()
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), setwd("C:/R/dev/apps/danboard/"), setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/"))
getwd()
source("func_my.r")
getwd()
source("func_save.r")
getwd()
source("func_spsstable.r")
getwd()
source("read_data.r")
source("read_data.r")
switch(menu(c("Atsushi", "Hajime"), title="0: exit") + 1, cat("Nothing done\n"), setwd("C:/R/dev/apps/danboard/"), setwd("/Users/sasMBP/Documents/Tobii_Japan/devasi/danboard/"))
source("func_my.r")
source("func_save.r")
source("func_spsstable.r")
source("read_data.r")
getwd()
projectsheet <- paste(projectname,"_Master_r.xlsx",sep="")
attlist   <- read.xlsx( projectsheet, 1,  encoding="UTF-8", header=TRUE)
att       <- read.xlsx( projectsheet, 2,  encoding="UTF-8", header=TRUE, row.names=TRUE)
queslist  <- read.xlsx( projectsheet, 3,  encoding="UTF-8", header=TRUE, row.names=TRUE)
